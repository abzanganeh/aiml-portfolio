# Professional Flask Application Configuration
# Ali Barzin Zanganeh - Machine Learning Engineer Portfolio

# Set the main application entry point
DirectoryIndex app.py

# Enable Python CGI execution
AddHandler cgi-script .py
Options +ExecCGI

# Ensure app.py is treated as executable
<Files "app.py">
    SetHandler cgi-script
    Options +ExecCGI
</Files>

# Professional URL routing for Flask application
RewriteEngine On

# Serve static assets directly (CSS, JS, images)
RewriteRule ^static/ - [L]

# Route all other requests to the Flask application
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ app.py/$1 [QSA,L]

# Professional security headers
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options SAMEORIGIN
Header always set X-XSS-Protection "1; mode=block"
Header always set Referrer-Policy "strict-origin-when-cross-origin"

# Performance optimization for static assets
<FilesMatch "\.(css|js|png|jpg|jpeg|gif|svg|ico|woff|woff2)$">
    ExpiresActive On
    ExpiresDefault "access plus 1 month"
    Header set Cache-Control "public, immutable"
</FilesMatch>

# Prevent access to sensitive files
<FilesMatch "\.(py|pyc|pyo|log|ini|conf)$">
    <RequireAll>
        Require all denied
    </RequireAll>
</FilesMatch>

# Allow only app.py to be executed
<Files "app.py">
    <RequireAll>
        Require all granted
    </RequireAll>
</Files>
